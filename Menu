	import java.util.Scanner;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;

	public class Menu {

		public static void afficher(String s){
			int taille=s.length();
			taille=(int) Math.sqrt(taille);
			
			int h=0;
			for(int j=0;j<=taille+1;j++){	/* boucle correspondant au nombre de ligne à afficher*/
				
				for(int a=0;a<j+1;a++)
					System.out.print(" ");
				
				if(j==0){
					/*  affichage de la première ligne 	*/
					for(int i=0;i<=taille;i++){
						if(i==taille)
							System.out.print("W/");
						else
							System.out.print("W ");
					}
							
							
					System.out.println("B");
				}
				
				
				/* affichage du centre */
				else if(j>0 && j<=taille){
					
					for(int x=0;x<=taille+1;x++){
						if(x==0 || x==taille+1)
							System.out.print("B ");
						else if(x>0 && x<taille+1){
							System.out.print(s.charAt(h) + " ");
							h++;
						}
							
					}
					System.out.println("");
				}
				else{ /* affichage dernière ligne */
					
					System.out.print("B/");
					for(int i=0;i<=taille;i++)
							System.out.print("W ");
						
						
				
					
				}
				
				
				
			}
			System.out.println("");
		}
		
		public char afficherMenu(){
			
			System.out.println("=======================");
			System.out.println("N: Nouvelle partie");
			System.out.println("S: Sauvegarder partie");
			System.out.println("C: Charger partie");
			System.out.println("A: Annuler dernier coup");
			System.out.println("P: Quitter la partie");
			System.out.println("J: Quitter le jeu");
			System.out.println("=======================");
			System.out.println("Que voulez vous faire? (Donnez la lettre correspondante");
			Scanner sc= new Scanner(System.in);
			String str=sc.nextLine();
			return str.charAt(0);
			
			
			
		}
		
		private static void sauvegarderCoup(String plateau,char couleur,int x,int y){
			
			
			
			
			return;
		}
		
		
		public int recupererTaille(){
			try {
		        BufferedReader fr = new BufferedReader(new FileReader ("sauvegarde.txt"));
		        fr.readLine();
		        String s1=fr.readLine();  
		        char taille=s1.charAt(s1.length()-1);
		        int valeur = (int) taille;
		        valeur-='0';
		        fr.close();
		        
		    
		        return valeur;
		        
		        }
		catch (IOException exception){
		    System.out.println ("Erreur lors de la lecture : " + exception.getMessage());
		        }
			
			return -1;
			
			
		}
		
		private static void sauvegarderCoup(char couleur,int x,int y){
			
			
			
			
			return;
		}
			
		public void sauvegarder(String s,int taille){
				
				File f=new File("sauvegarde.txt");
				
				try
				{
				    PrintWriter fw = new PrintWriter(new BufferedWriter(new FileWriter (f)));
				    
				    fw.println("\\hex");
				    fw.println("\\board "+taille);;
				    
			       
			        
				    for(int i=0;i<s.length();i++){
				    	
				    
				    		fw.print (s.charAt(i));
				    		
				    	if((i+1)%taille==0)
				    		fw.println ();
				    }
				    fw.println("\\endboard");
				    fw.println("\\game");
				    fw.println("\\endgame");
				    fw.println("\\endhex");
				    fw.close();
				}
				catch (IOException exception)
				{
				    System.out.println ("Erreur lors de la lecture : " + exception.getMessage());
				}
			}
		
		public String charger() {
		    try {
		        BufferedReader fr = new BufferedReader(new FileReader ("sauvegarde.txt"));
		        fr.readLine();
		        String s1=fr.readLine();  
		        char taille=s1.charAt(s1.length()-1);
		        String valeur = new String();
		        int i=0;
		        while (fr.ready() && i+'0'<taille ) {
		        	
		            	valeur += fr.readLine();
		            	i++;
		            }
		    fr.close();
		        return valeur;
		        }
		catch (IOException exception){
		    System.out.println ("Erreur lors de la lecture : " + exception.getMessage());
		        }
		return null;
		    }
		
		public void annulationDernierCoup(){
			
			/*FONCTION POUR ANNULER LE DERNIER COUP JOUER */
			
			
		}
		
		public void abandonPartie(){
			
			/*FONCTION POUR QUITTER LA PARTIE EN COURS */
			
			
		}
		
		public void quitter(){
			
			/*FONCTION POUR QUITTER LE JEU */
			
			
		}
		
}


